{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aditya.verma/WebstormProjects/react-sidebar-dropdown/src/pages/validators/VotingPower.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ChartComponent, { Bar, Doughnut, Line, Pie } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nconst VotingPower = () => {\n  _s();\n\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    let value = [];\n    let key = [];\n    let combinedArray = [];\n    let newCombinedArray = [];\n    let mp = {};\n    axios.get(\"http://139.59.67.100:1317/cosmos/staking/v1beta1/validators\").then(res => {\n      console.log(res);\n\n      for (const dataObj of res.data.validators) {\n        mp[dataObj.operator_address] = dataObj.description.moniker;\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.get(\"http://139.59.67.100:1317/validatorsets/latest\").then(res => {\n      console.log(res);\n\n      for (const dataObj of res.data.result.validators) {\n        combinedArray.push({\n          value: dataObj.voting_power,\n          key: mp[dataObj.address]\n        }); //sorting in descending order\n        // combinedArray.sort((a, b) => (a.value < b.value) ? 1 : -1)\n        // newCombinedArray = combinedArray.slice(0, 10)\n      } //\n\n\n      combinedArray = combinedArray.sort(function (a, b) {\n        return a.value - b.value;\n      });\n      newCombinedArray = combinedArray.slice(0, 10);\n\n      for (const dataObj of newCombinedArray) {\n        value.push(dataObj.value);\n        key.push(dataObj.key);\n      }\n\n      console.log(\"combined array:\", newCombinedArray);\n      setChartData({\n        labels: key,\n        datasets: [{\n          label: \"Voting Power\",\n          data: value,\n          backgroundColor: ['rgb(255, 99, 132)', 'rgb(0, 255, 0)', 'rgb(204, 153, 255)', 'hsl(210, 100%, 65%)', 'rgb(0, 255, 255)', 'rgb(255, 255, 0)', 'rgb(255, 0, 255)', 'rgb(90, 129, 255)', 'rgb(92, 214, 214)', 'rgb(255, 184, 77)'],\n          borderWidth: 4\n        }]\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    console.log(value, key);\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Doughnut, {\n        data: chartData,\n        options: {\n          responsive: true,\n          title: {\n            text: \"Top 10 Validators by Voting Power\",\n            fontSize: 25,\n            display: true\n          },\n          // scales: {\n          //     yAxes: [\n          //         {\n          //             ticks: {\n          //                 autoSkip: true,\n          //                 maxTicksLimit: 10,\n          //                 beginAtZero: true\n          //             },\n          //             gridLines: {\n          //                 display: true\n          //             }\n          //         }\n          //     ],\n          //     xAxes: [\n          //         {\n          //             ticks: {\n          //                 autoSkip: true,\n          //                 tickLength: 30,\n          //                 maxTicksLimit: 10,\n          //                 beginAtZero: true\n          //             },\n          //             gridLines: {\n          //                 display: true\n          //             }\n          //         },\n          //\n          //     ]\n          // },\n          layout: {\n            padding: {\n              left: 300,\n              right: 0,\n              top: 0,\n              bottom: 0\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(VotingPower, \"qLlYZUJv3crif/0xI+dehEQf0o0=\");\n\n_c = VotingPower;\nexport default VotingPower;\n\nvar _c;\n\n$RefreshReg$(_c, \"VotingPower\");","map":{"version":3,"sources":["/Users/aditya.verma/WebstormProjects/react-sidebar-dropdown/src/pages/validators/VotingPower.js"],"names":["React","useState","useEffect","ChartComponent","Bar","Doughnut","Line","Pie","axios","VotingPower","chartData","setChartData","chart","value","key","combinedArray","newCombinedArray","mp","get","then","res","console","log","dataObj","data","validators","operator_address","description","moniker","catch","err","result","push","voting_power","address","sort","a","b","slice","labels","datasets","label","backgroundColor","borderWidth","responsive","title","text","fontSize","display","layout","padding","left","right","top","bottom"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport ChartComponent, {Bar, Doughnut, Line, Pie} from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nconst VotingPower = () => {\n    const [chartData, setChartData] = useState({});\n\n    const chart = () => {\n        let value = [];\n        let key = [];\n        let combinedArray = []\n        let newCombinedArray = []\n        let mp = {}\n\n        axios\n            .get(\"http://139.59.67.100:1317/cosmos/staking/v1beta1/validators\")\n            .then(res => {\n                console.log(res);\n                for (const dataObj of res.data.validators) {\n                    mp[dataObj.operator_address] = dataObj.description.moniker\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            });\n\n\n        axios\n            .get(\"http://139.59.67.100:1317/validatorsets/latest\")\n            .then(res => {\n                console.log(res);\n                for (const dataObj of res.data.result.validators) {\n                    combinedArray.push(\n                        {\n                            value: (dataObj.voting_power),\n                            key: mp[dataObj.address]\n                        }\n                    )\n                    //sorting in descending order\n                    // combinedArray.sort((a, b) => (a.value < b.value) ? 1 : -1)\n                    // newCombinedArray = combinedArray.slice(0, 10)\n                }\n                //\n                combinedArray = combinedArray.sort(function (a, b) {\n                    return a.value - b.value})\n                newCombinedArray = combinedArray.slice(0, 10)\n\n                for (const dataObj of newCombinedArray) {\n                    value.push((dataObj.value));\n                    key.push((dataObj.key));\n                }\n                console.log(\"combined array:\", newCombinedArray)\n                setChartData({\n\n                    labels: key,\n                    datasets: [\n                        {\n                            label: \"Voting Power\",\n                            data: value,\n                            backgroundColor: ['rgb(255, 99, 132)', 'rgb(0, 255, 0)', 'rgb(204, 153, 255)', 'hsl(210, 100%, 65%)', 'rgb(0, 255, 255)', 'rgb(255, 255, 0)', 'rgb(255, 0, 255)', 'rgb(90, 129, 255)', 'rgb(92, 214, 214)', 'rgb(255, 184, 77)'],\n\n                            borderWidth: 4,\n                        }\n                    ]\n                });\n            })\n            .catch(err => {\n                console.log(err);\n            });\n        console.log(value, key);\n    };\n\n    useEffect(() => {\n        chart();\n    }, []);\n    return (\n        <div className=\"App\">\n            <div>\n                <Doughnut\n                    data={chartData}\n                    options={{\n                        responsive: true,\n                        title: {text: \"Top 10 Validators by Voting Power\", fontSize: 25, display: true},\n                        // scales: {\n                        //     yAxes: [\n                        //         {\n                        //             ticks: {\n                        //                 autoSkip: true,\n                        //                 maxTicksLimit: 10,\n                        //                 beginAtZero: true\n                        //             },\n                        //             gridLines: {\n                        //                 display: true\n                        //             }\n                        //         }\n                        //     ],\n                        //     xAxes: [\n                        //         {\n                        //             ticks: {\n                        //                 autoSkip: true,\n                        //                 tickLength: 30,\n                        //                 maxTicksLimit: 10,\n                        //                 beginAtZero: true\n                        //             },\n                        //             gridLines: {\n                        //                 display: true\n                        //             }\n                        //         },\n                        //\n                        //     ]\n                        // },\n                        layout: {\n                            padding: {\n                                left: 300,\n                                right: 0,\n                                top: 0,\n                                bottom: 0\n                            }\n                        }\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default VotingPower;\n"]},"metadata":{},"sourceType":"module"}