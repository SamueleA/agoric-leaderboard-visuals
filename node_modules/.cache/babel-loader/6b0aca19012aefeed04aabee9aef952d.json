{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aditya.verma/WebstormProjects/react-sidebar-dropdown/src/pages/Team.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ChartComponent, { Bar, Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nconst Delegator = () => {\n  _s();\n\n  const [chartData, setChartData] = useState({});\n  const [employeeSalary, setEmployeeSalary] = useState([]);\n  const [employeeAge, setEmployeeAge] = useState([]);\n\n  const chart = () => {\n    let empSal = [];\n    let empAge = [];\n    const query = `\n{\n  delegators(orderDirection: desc\n  orderBy: totalStakedTokens\n    first: 10) {\n    id\n    totalStakedTokens\n  }\n}\n  `;\n    axios.post(\"https://api.thegraph.com/subgraphs/name/graphprotocol/graph-network-mainnet\", {\n      query\n    }).then(res => {\n      console.log(res);\n\n      for (const dataObj of res.data.data.delegators) {\n        empSal.push(dataObj.totalStakedTokens / Math.pow(10, 18).toFixed(2));\n        empAge.push(dataObj.id);\n      }\n\n      setChartData({\n        labels: empAge,\n        datasets: [{\n          label: \"Indexing Rewards\",\n          data: empSal,\n          backgroundColor: ['rgb(255, 99, 132)', 'rgb(0, 255, 0)', 'rgb(204, 153, 255)', 'hsl(210, 100%, 65%)', 'rgb(0, 255, 255)', 'rgb(255, 255, 0)', 'rgb(255, 0, 255)', 'rgb(90, 129, 255)', 'rgb(92, 214, 214)', 'rgb(255, 184, 77)'],\n          borderWidth: 4\n        }]\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    console.log(empSal, empAge);\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Delegator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: {\n          responsive: true,\n          title: {\n            text: \"Top 10 Indexers by Indexing Rewards\",\n            display: true\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                autoSkip: true,\n                maxTicksLimit: 10,\n                beginAtZero: true\n              },\n              gridLines: {\n                display: true\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                autoSkip: true,\n                tickLength: 30,\n                maxTicksLimit: 10,\n                beginAtZero: true\n              },\n              gridLines: {\n                display: true\n              }\n            }]\n          },\n          layout: {\n            padding: {\n              left: 50,\n              right: 0,\n              top: 0,\n              bottom: 0\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Delegator, \"6/5/3E9mKoSupMI2jXuIDDeJqao=\");\n\n_c = Delegator;\nexport default Delegator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Delegator\");","map":{"version":3,"sources":["/Users/aditya.verma/WebstormProjects/react-sidebar-dropdown/src/pages/Team.js"],"names":["React","useState","useEffect","ChartComponent","Bar","Line","axios","Delegator","chartData","setChartData","employeeSalary","setEmployeeSalary","employeeAge","setEmployeeAge","chart","empSal","empAge","query","post","then","res","console","log","dataObj","data","delegators","push","totalStakedTokens","Math","pow","toFixed","id","labels","datasets","label","backgroundColor","borderWidth","catch","err","responsive","title","text","display","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","gridLines","xAxes","tickLength","layout","padding","left","right","top","bottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ChartComponent, {Bar, Line} from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nconst Delegator = () => {\n    const [chartData, setChartData] = useState({});\n    const [employeeSalary, setEmployeeSalary] = useState([]);\n    const [employeeAge, setEmployeeAge] = useState([]);\n\n    const chart = () => {\n        let empSal = [];\n        let empAge = [];\n\n        const query = `\n{\n  delegators(orderDirection: desc\n  orderBy: totalStakedTokens\n    first: 10) {\n    id\n    totalStakedTokens\n  }\n}\n  `;\n\n\n        axios\n            .post(\"https://api.thegraph.com/subgraphs/name/graphprotocol/graph-network-mainnet\", {query})\n            .then(res => {\n                console.log(res);\n                for (const dataObj of res.data.data.delegators) {\n                    empSal.push(((dataObj.totalStakedTokens))/Math.pow(10,18).toFixed(2));\n                    empAge.push((dataObj.id));\n                }\n                setChartData({\n\n                    labels: empAge,\n                    datasets: [\n                        {\n                            label: \"Indexing Rewards\",\n                            data: empSal,\n                            backgroundColor: ['rgb(255, 99, 132)','rgb(0, 255, 0)','rgb(204, 153, 255)','hsl(210, 100%, 65%)','rgb(0, 255, 255)','rgb(255, 255, 0)','rgb(255, 0, 255)', 'rgb(90, 129, 255)', 'rgb(92, 214, 214)','rgb(255, 184, 77)'],\n\n                            borderWidth: 4,\n                        }\n                    ]\n                });\n            })\n            .catch(err => {\n                console.log(err);\n            });\n        console.log(empSal, empAge);\n    };\n\n    useEffect(() => {\n        chart();\n    }, []);\n    return (\n        <div className=\"App\">\n            <h1>Delegator</h1>\n            <div>\n                <Bar\n                    data={chartData}\n                    options={{\n                        responsive: true,\n                        title: { text: \"Top 10 Indexers by Indexing Rewards\", display: true },\n                        scales: {\n                            yAxes: [\n                                {\n                                    ticks: {\n                                        autoSkip: true,\n                                        maxTicksLimit: 10,\n                                        beginAtZero: true\n                                    },\n                                    gridLines: {\n                                        display: true\n                                    }\n                                }\n                            ],\n                            xAxes: [\n                                {\n                                    ticks: {\n                                        autoSkip: true,\n                                        tickLength: 30,\n                                        maxTicksLimit: 10,\n                                        beginAtZero: true\n                                    },\n                                    gridLines: {\n                                        display: true\n                                    }\n                                }\n                            ]\n\n                        },\n                        layout: { padding: {\n                                left: 50,\n                                right: 0,\n                                top: 0,\n                                bottom: 0\n                            }}\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Delegator;\n"]},"metadata":{},"sourceType":"module"}