{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aditya.verma/WebstormProjects/react-sidebar-dropdown/src/pages/Validators.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ChartComponent, { Bar, Line, Pie } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nconst Validators = () => {\n  _s();\n\n  const [chartData, setChartData] = useState({});\n  const [employeeSalary, setEmployeeSalary] = useState([]);\n  const [employeeAge, setEmployeeAge] = useState([]);\n\n  const chart = () => {\n    let tokens = [];\n    let moniker = [];\n    let combinedArray = [];\n    let newCombinedArray = [];\n    const query = `\n{\n  subgraphs(orderDirection: desc\n  orderBy: signalledTokens\n    first: 10) {\n    displayName\n    signalledTokens\n  }\n}\n  `;\n    axios.get(\"http://139.59.67.100:1317/cosmos/staking/v1beta1/validators\").then(res => {\n      console.log(res);\n\n      for (const dataObj of res.data.validators) {\n        combinedArray.push({\n          tokens: dataObj.tokens,\n          moniker: dataObj.description.moniker\n        }); //sorting in descending order\n\n        combinedArray.sort((a, b) => a.tokens < b.tokens ? 1 : -1);\n        newCombinedArray = combinedArray.slice(0, 10);\n      }\n\n      for (const dataObj of newCombinedArray) {\n        tokens.push(dataObj.tokens);\n        moniker.push(dataObj.moniker);\n      }\n\n      console.log(\"combined array:\", newCombinedArray);\n      setChartData({\n        labels: moniker,\n        datasets: [{\n          label: \"Amount of uagstake\",\n          data: tokens,\n          backgroundColor: ['rgb(255, 99, 132)', 'rgb(0, 255, 0)', 'rgb(204, 153, 255)', 'hsl(210, 100%, 65%)', 'rgb(0, 255, 255)', 'rgb(255, 255, 0)', 'rgb(255, 0, 255)', 'rgb(90, 129, 255)', 'rgb(92, 214, 214)', 'rgb(255, 184, 77)'],\n          borderWidth: 4\n        }]\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    console.log(tokens, moniker);\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dankmemes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: {\n          responsive: true,\n          title: {\n            text: \"Top 10 Validators by Tokens\",\n            display: true\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                autoSkip: true,\n                maxTicksLimit: 10,\n                beginAtZero: true\n              },\n              gridLines: {\n                display: true\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                autoSkip: true,\n                tickLength: 30,\n                maxTicksLimit: 10,\n                beginAtZero: true\n              },\n              gridLines: {\n                display: true\n              }\n            }]\n          },\n          layout: {\n            padding: {\n              left: 300,\n              right: 0,\n              top: 0,\n              bottom: 0\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Validators, \"6/5/3E9mKoSupMI2jXuIDDeJqao=\");\n\n_c = Validators;\nexport default Validators;\n\nvar _c;\n\n$RefreshReg$(_c, \"Validators\");","map":{"version":3,"sources":["/Users/aditya.verma/WebstormProjects/react-sidebar-dropdown/src/pages/Validators.js"],"names":["React","useState","useEffect","ChartComponent","Bar","Line","Pie","axios","Validators","chartData","setChartData","employeeSalary","setEmployeeSalary","employeeAge","setEmployeeAge","chart","tokens","moniker","combinedArray","newCombinedArray","query","get","then","res","console","log","dataObj","data","validators","push","description","sort","a","b","slice","labels","datasets","label","backgroundColor","borderWidth","catch","err","responsive","title","text","display","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","gridLines","xAxes","tickLength","layout","padding","left","right","top","bottom"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport ChartComponent, {Bar, Line, Pie} from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nconst Validators = () => {\n    const [chartData, setChartData] = useState({});\n    const [employeeSalary, setEmployeeSalary] = useState([]);\n    const [employeeAge, setEmployeeAge] = useState([]);\n\n    const chart = () => {\n        let tokens = [];\n        let moniker = [];\n        let combinedArray = []\n        let newCombinedArray = []\n\n        const query = `\n{\n  subgraphs(orderDirection: desc\n  orderBy: signalledTokens\n    first: 10) {\n    displayName\n    signalledTokens\n  }\n}\n  `;\n\n        axios\n            .get(\"http://139.59.67.100:1317/cosmos/staking/v1beta1/validators\")\n            .then(res => {\n                console.log(res);\n                for (const dataObj of res.data.validators) {\n                    combinedArray.push(\n                        {\n                            tokens: (dataObj.tokens),\n                            moniker: (dataObj.description.moniker)\n                        }\n                    )\n                    //sorting in descending order\n                    combinedArray.sort((a, b) => (a.tokens < b.tokens) ? 1 : -1)\n                    newCombinedArray = combinedArray.slice(0, 10)\n                }\n\n                for (const dataObj of newCombinedArray) {\n                    tokens.push((dataObj.tokens));\n                    moniker.push((dataObj.moniker));\n                }\n                console.log(\"combined array:\", newCombinedArray)\n                setChartData({\n\n                    labels: moniker,\n                    datasets: [\n                        {\n                            label: \"Amount of uagstake\",\n                            data: tokens,\n                            backgroundColor: ['rgb(255, 99, 132)', 'rgb(0, 255, 0)', 'rgb(204, 153, 255)', 'hsl(210, 100%, 65%)', 'rgb(0, 255, 255)', 'rgb(255, 255, 0)', 'rgb(255, 0, 255)', 'rgb(90, 129, 255)', 'rgb(92, 214, 214)', 'rgb(255, 184, 77)'],\n\n                            borderWidth: 4,\n                        }\n                    ]\n                });\n            })\n            .catch(err => {\n                console.log(err);\n            });\n        console.log(tokens, moniker);\n    };\n\n    useEffect(() => {\n        chart();\n    }, []);\n    return (\n        <div className=\"App\">\n            <h1>Dankmemes</h1>\n            <div>\n                <Bar\n                    data={chartData}\n                    options={{\n                        responsive: true,\n                        title: {text: \"Top 10 Validators by Tokens\", display: true},\n                        scales: {\n                            yAxes: [\n                                {\n                                    ticks: {\n                                        autoSkip: true,\n                                        maxTicksLimit: 10,\n                                        beginAtZero: true\n                                    },\n                                    gridLines: {\n                                        display: true\n                                    }\n                                }\n                            ],\n                            xAxes: [\n                                {\n                                    ticks: {\n                                        autoSkip: true,\n                                        tickLength: 30,\n                                        maxTicksLimit: 10,\n                                        beginAtZero: true\n                                    },\n                                    gridLines: {\n                                        display: true\n                                    }\n                                },\n\n                            ]\n                        },\n                        layout: {\n                            padding: {\n                                left: 300,\n                                right: 0,\n                                top: 0,\n                                bottom: 0\n                            }\n                        }\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Validators;\n"]},"metadata":{},"sourceType":"module"}